# standard directive that allows for service discovery
#    location /endpoint/ {
#      resolver 127.0.0.11;  # docker embedded DNS server
#      set $target http://service:9000;  # resolve during runtime rather than during startup
#      proxy_pass $target;
#      ...
#    }

#client_max_body_size 300M;
#

server {
    listen 80;
    listen [::]:80;
    server_name 167.172.101.50;


    location /static-files/ {
        autoindex on;
        alias /static-files/;
    }
    location /media-files/ {
        autoindex on;
        alias /media-files/;
    }

    location ~ /backend/ {
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,access-control-allow-credentials,Access-Control-Allow-Origin';
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        client_body_temp_path /tmp 1 2;
        resolver 127.0.0.11;  # docker embedded DNS server
        set $target http://app:8000;  # resolve during runtime rather than during startup
        proxy_pass $target;
    }

    location / {
      root /frontend;
      index index.html;
      try_files $uri  /index.html;
   }

}


#server {
#   listen 80;
#   listen [::]:80;
#   server_name jacob.propulsion-learn.ch;
#   return 301 https://$server_name$request_uri;
#}
#server {
#
#   # SSL configuration
#   listen 443 ssl http2;
#   listen [::]:443 ssl http2;
#   server_name jacob.propulsion-learn.ch;
#   ssl_certificate /etc/letsencrypt/live/jacob.propulsion-learn.ch/fullchain.pem;
#   ssl_certificate_key /etc/letsencrypt/live/jacob.propulsion-learn.ch/privkey.pem;
#   ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#   ssl_prefer_server_ciphers on;
#   ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
#   ssl_ecdh_curve secp384r1;
#   ssl_session_cache shared:SSL:10m;
#   ssl_session_tickets off;
#   ssl_stapling on;
#   ssl_stapling_verify on;
#   resolver 8.8.8.8 8.8.4.4 valid=300s;
#   resolver_timeout 5s;
#   add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
#   add_header X-Frame-Options "";  # must not be on DENY to make iframe work!
#   add_header X-Content-Type-Options nosniff;
#
#   location /static-files/ {
#        autoindex on;
#        alias /static-files/;
#   }
#   location /media-files/ {
#        autoindex on;
#        alias /media-files/;
#   }
#   location /.well-known/acme-challenge {
#       root /var/www/letsencrypt;
#   }
#   location ~ /backend/ {
#        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,access-control-allow-credentials,Access-Control-Allow-Origin';
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header Host $http_host;
#        proxy_set_header X-Forwarded-Proto $scheme;
#        proxy_redirect off;
#        client_body_temp_path /tmp 1 2;
#        resolver 127.0.0.11;  # docker embedded DNS server
#        set $target http://app:8000;  # resolve during runtime rather than during startup
#        proxy_pass $target;
#   }
#
#   location / {
#      root /frontend;
#      index index.html;
#      try_files $uri  /index.html;
#   }
#}
#
